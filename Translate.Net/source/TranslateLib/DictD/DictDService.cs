#region License block : MPL 1.1/GPL 2.0/LGPL 2.1
/* ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is the FreeCL.Net library.
 *
 * The Initial Developer of the Original Code is 
 *  Oleksii Prudkyi (Oleksii.Prudkyi@gmail.com).
 * Portions created by the Initial Developer are Copyright (C) 2008
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either the GNU General Public License Version 2 or later (the "GPL"), or
 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */
#endregion

using System;
using System.Diagnostics.CodeAnalysis;

namespace Translate
{
	/// <summary>
	/// Description of DictdService.
	/// </summary>
	public class DictDService : Service
	{
		public DictDService()
		{
			Url = new Uri("http://www.dict.org/");
			Name = "dictd";
			CompanyName = "The DICT Development Group";
			Copyright = "The DICT Development Group, BSD, GPL, others";
			IconUrl = new Uri("http://www.dict.org/favicon.ico");
			FullName = "The Dictionary Server Protocol (DICT - RFC 2229)";
						
			/*
			Code automatically generated by EnumDictd tool at 25.01.2009 4:55:59
			Total count : 347, ignored : 253, unsupported 0

			*/

			AddMonolingualDictionary(new Dictd1000pbioDictionary());
			AddMonolingualDictionary(new DictdAbr1wDictionary());
			AddMonolingualDictionary(new DictdAhiezerDictionary());
			AddBilingualDictionary(new DictdArabicDictionary());
			AddBilingualDictionary(new DictdAraEngDictionary());
			AddMonolingualDictionary(new DictdAviationDictionary());
			AddMonolingualDictionary(new DictdBeslovDictionary());
			AddBilingualDictionary(new DictdBiologyDictionary());
			AddMonolingualDictionary(new DictdBouvierDictionary());
			AddMonolingualDictionary(new DictdBrok_and_efrDictionary());
			AddMonolingualDictionary(new DictdBusDictionary());
			AddMonolingualDictionary(new DictdChurchDictionary());
			AddBilingualDictionary(new DictdCroEngDictionary());
			AddMonolingualDictionary(new DictdDalfDictionary());
			AddBilingualDictionary(new DictdDeuEngDictionary());
			AddBilingualDictionary(new DictdDeuNldDictionary());
			AddBilingualDictionary(new DictdDeutsch_deRuDictionary());
			AddBilingualDictionary(new DictdDeutsch_ruDeDictionary());
			AddMonolingualDictionary(new DictdDevilsDictionary());
			AddMonolingualDictionary(new DictdEastonDictionary());
			AddBilingualDictionary(new DictdEdictFrDictionary());
			AddMonolingualDictionary(new DictdElementsDictionary());
			AddBilingualDictionary(new DictdEngAraDictionary());
			AddBilingualDictionary(new DictdEngcomDictionary());
			AddBilingualDictionary(new DictdEngCroDictionary());
			AddBilingualDictionary(new DictdEngCzeDictionary());
			AddBilingualDictionary(new DictdEngDeuDictionary());
			AddBilingualDictionary(new DictdEngHinDictionary());
			AddBilingualDictionary(new DictdEngHunDictionary());
			AddBilingualDictionary(new DictdEngPorDictionary());
			AddBilingualDictionary(new DictdEngTurDictionary());
			AddBilingualDictionary(new DictdEstonian_etRuDictionary());
			AddMonolingualDictionary(new DictdEthnographicDictionary());
			AddMonolingualDictionary(new DictdFindictDictionary());
			AddMonolingualDictionary(new DictdFoldocDictionary());
			AddMonolingualDictionary(new DictdGazCountyDictionary());
			AddMonolingualDictionary(new DictdGazetteerDictionary());
			AddMonolingualDictionary(new DictdGazPlaceDictionary());
			AddMonolingualDictionary(new DictdGazZipDictionary());
			AddMonolingualDictionary(new DictdGcideDictionary());
			AddBilingualDictionary(new DictdGeology_enRuDictionary());
			AddBilingualDictionary(new DictdGeology_ruEnDictionary());
			AddMonolingualDictionary(new DictdHi127Dictionary());
			AddBilingualDictionary(new DictdHinEngDictionary());
			AddMonolingualDictionary(new DictdHitchcockDictionary());
			AddBilingualDictionary(new DictdHunEngDictionary());
			AddBilingualDictionary(new DictdIdiomsDictionary());
			AddMonolingualDictionary(new DictdJargonDictionary());
			AddBilingualDictionary(new DictdJmdictDictionary());
			AddMonolingualDictionary(new DictdJmnedictDictionary());
			AddBilingualDictionary(new DictdKanjidic2Dictionary());
			AddBilingualDictionary(new DictdKorolew_enRuDictionary());
			AddBilingualDictionary(new DictdKorolew_ruEnDictionary());
			AddBilingualDictionary(new DictdLatrusDictionary());
			AddBilingualDictionary(new DictdMagusDictionary());
			AddBilingualDictionary(new DictdMech_nomimeDictionary());
			AddMonolingualDictionary(new DictdMeddictDictionary());
			AddMonolingualDictionary(new DictdMobyThesDictionary());
			AddBilingualDictionary(new DictdMueller24Dictionary());
			AddMonolingualDictionary(new DictdMuiswerkDictionary());
			AddBilingualDictionary(new DictdNldDeuDictionary());
			AddBilingualDictionary(new DictdNldEngDictionary());
			AddBilingualDictionary(new DictdNldFraDictionary());
			AddMonolingualDictionary(new DictdObiBioDictionary());
			AddMonolingualDictionary(new DictdOzhegovDictionary());
			AddMonolingualDictionary(new DictdOzhshvDictionary());
			AddBilingualDictionary(new DictdPorEngDictionary());
			AddMonolingualDictionary(new DictdReligionDictionary());
			AddMonolingualDictionary(new DictdScAbbrDictionary());
			AddBilingualDictionary(new DictdSdict_fiRuDictionary());
			AddBilingualDictionary(new DictdSdict_ruEnDictionary());
			AddMonolingualDictionary(new DictdSesDictionary());
			AddMonolingualDictionary(new DictdShakespeareDictionary());
			AddBilingualDictionary(new DictdSinyagin_alexeymavrinDictionary());
			AddBilingualDictionary(new DictdSinyagin_businessDictionary());
			AddBilingualDictionary(new DictdSinyagin_computerDictionary());
			AddBilingualDictionary(new DictdSinyagin_general_erDictionary());
			AddBilingualDictionary(new DictdSinyagin_general_reDictionary());
			AddMonolingualDictionary(new DictdSmileyDictionary());
			AddMonolingualDictionary(new DictdSNCTDictionary());
			AddMonolingualDictionary(new DictdSNFEDictionary());
			AddMonolingualDictionary(new DictdSNFSDictionary());
			AddBilingualDictionary(new DictdSokrat_enRuDictionary());
			AddBilingualDictionary(new DictdSokrat_ruEnDictionary());
			AddBilingualDictionary(new DictdStardicDictionary());
			AddBilingualDictionary(new DictdSwedish_ruSvDictionary());
			AddBilingualDictionary(new DictdSwedish_svRuDictionary());
			AddBilingualDictionary(new DictdTanaka_corpusDictionary());
			AddMonolingualDictionary(new DictdTeoDictionary());
			AddMonolingualDictionary(new DictdUshakovDictionary());
			AddMonolingualDictionary(new DictdVeraDictionary());
			AddMonolingualDictionary(new DictdWorld02Dictionary());
			AddBilingualDictionary(new DictdXdictDictionary());
			
		}
	}
}
